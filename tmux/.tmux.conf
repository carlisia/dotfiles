# ~/tmux.conf

# tmux v3.x compatible; some macOS specific.

set-option -g default-shell "/opt/homebrew/bin/fish"
set-option -g default-command "fish -l"
set -g default-terminal xterm-256color

# Automatic window renaming may use a lot of CPU
setw -g automatic-rename off

## Options to make tmux more pleasant

# Make mouse useful in copy mode
# Note: when an application turns on the mouse, most terminals
# provide a way to bypass it. On many Linux terminals this is
# holding down the Shift key; for iTerm2 it is the option key.
set -g mouse on #For tmux version 2.1 and up

# Scroll History
set -g history-limit 30000

# Allows for faster key repetition
set -s escape-time 0

set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g history-limit 1000000     # increase history size (from 2,000)

set -g status-position top

## Term
set-option -g default-terminal 'screen-256color'
set-option -g terminal-overrides ',xterm-256color:RGB'
set -g default-terminal "${TERM}"

# set -g default-terminal "tmux-256color"
# set -as terminal-features ',rxvt-unicode-256color:clipboard'

## Bindings

# Use backtick as the prefix
# Do it just like this or you will not
# be able to use type backtick literally
unbind C-b
set -g prefix `
bind ` send-prefix
bind-key L last-window

# reload config file
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Yank and copy/paste for macOS
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy' # tmux kill-server && tmux


# Allows to use '<prefix>-a' <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

## Search
set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'

## --------
# vars
set -g @custom_separator "#[fg=#{@thm_surface_2}]"

set -g @custom_choose_tree_format "\
#{?pane_format,\
#{?pane_marked,#[bg=#{@thm_surface_1}],}\
#[fg=#{@thm_green}] 󰕮 #{session_name} \
#{E:#{@custom_separator}}#[fg=#{@thm_maroon}] 󰆍 #{pane_current_command} \
#{E:#{@custom_separator}}#[fg=#{@thm_blue}] 󰉋 #{b:pane_current_path} \
#{?window_zoomed_flag,#{?pane_active,#{E:#{@custom_separator}}#[fg=#{@thm_yellow}] 󰁌 zoom ,},}\
#{?pane_marked,#{E:#{@custom_separator}}#[fg=#{@thm_yellow}] 󰈻 marked ,}\
#{?pane_active,#{E:#{@custom_separator}}#[fg=#{@thm_yellow}] 󰓎 active ,}\
,}\
#{?window_format,\
#{?window_marked_flag,#[bg=#{@thm_surface_1}],}\
#{?window_active,#{#[fg=#{@thm_peach},reverse]},\
#{?window_last_flag,#[fg=#{@thm_peach}],#[fg=#{@thm_rosewater}]}\
}\
 #{?#{==:#{window_panes},1},󰭯 ,󱟱 }#I #{window_name} \
#{#[fg=#{@thm_rosewater},noreverse]}\
#{?#{==:#{window_panes},1},\
#[fg=#{@thm_green}] 󰕮 #{session_name} \
#{E:#{@custom_separator}}#[fg=#{@thm_maroon}] 󰆍 #{pane_current_command} \
#{E:#{@custom_separator}}#[fg=#{@thm_blue}] 󰉋 #{b:pane_current_path} \
#{?window_marked_flag,#{E:#{@custom_separator}}#[fg=#{@thm_yellow}] 󰈻 marked ,}\
,\
#{?window_zoomed_flag,#[fg=#{@thm_yellow}] 󰁌 zoom ,}\
#{?window_marked_flag,#[fg=#{@thm_yellow}] 󰈻 marked ,}\
}\
,}\
#{?session_format,\
#{session_windows} windows\
#{?session_grouped, (group #{session_group}: #{session_group_list}),}\
#{?session_attached, (attached),}\
,}
"

## ---


## Panes and windows

# set -g pane-active-border-style 'fg=magenta,bg=default'
# set -g pane-border-style 'fg=brightblack,bg=default'


# Index windows and panes from 1 instead of 0.
set -g base-index 1
setw -g pane-base-index 1

set -g renumber-windows on       # renumber all windows when any window is closed

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Pane
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind V choose-tree -F "#{E:@custom_choose_tree_format}" -Z "join-pane -h -s "%%""
bind S choose-tree -F "#{E:@custom_choose_tree_format}" -Z "join-pane -v -s "%%""

bind b if-shell " [ #{window_panes} -gt '1' ] " { break-pane -a }

bind -n M-\{ swap-pane -U 
bind -n M-\} swap-pane -D
bind -n M-\/ last-window


## Other




# Set 'v' for vertical and 'h' for horizontal split
# bind v split-window -h -c '#{pane_current_path}'
# bind b split-window -v -c '#{pane_current_path}'

# vim-like pane switching
# bind -r k select-pane -U
# bind -r j select-pane -D
# bind -r h select-pane -L
# bind -r l select-pane -R

# # vim-like pane resizing
# bind -r C-k resize-pane -U
# bind -r C-j resize-pane -D
# bind -r C-h resize-pane -L
# bind -r C-l resize-pane -R

# bind-key M-7 resize-pane -t 1 -x 90
# bind-key M-8 resize-pane -t 1 -x 60
# bind-key M-9 resize-pane -t 1 -x 30
# bind-key M-0 resize-pane -t 0 -x 30

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# Some consoles don't like attempts to set the window title
# set -g set-titles off

# List of plugins
# set -g @plugin 'tmux-plugins/tpm'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# # statusbar configuration
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @themepack 'powerline/double/magenta'


##### Plugins configurations
## Catppuccin
# ~/.tmux.conf


##  Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'catppuccin/tmux'

# Configure Catppuccin
set -g @catppuccin_flavor "mocha"
set -g @catppuccin_window_status_style "rounded"

set -g @catppuccin_status_background "none" # none == default
set -g @catppuccin_pane_status_enabled "off"
set -g @catppuccin_pane_border_status "off"


# Load catppuccin
# run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux

# Load catppuccin
# run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
# For TPM, instead use:
# run ~/.tmux/plugins/tmux/catppuccin.tmux`


# set -agF status-right "#{E:@catppuccin_status_battery}"

# run ~/.config/tmux/plugins/tmux-plugins/tmux-cpu/cpu.tmux
# run ~/.config/tmux/plugins/tmux-plugins/tmux-battery/battery.tmux
# Or, if using TPM, just run TPM


# set -g @plugin 'omerxx/catppuccin-tmux' # My fork that holds the meetings script bc I'm lazy af

# set -g @floax-width '80%'
# set -g @floax-height '80%'
# set -g @floax-border-color 'magenta'
# set -g @floax-text-color 'blue'
# set -g @floax-bind 'p'
# set -g @floax-change-path 'true'
# # set -g @sessionx-bind-zo-new-window 'ctrl-y'
# # set -g @sessionx-auto-accept 'off'
# # set -g @sessionx-custom-paths '/Users/carlisiacampos/carlisia/dotfiles'
# # set -g @sessionx-bind 'o'
# # set -g @sessionx-x-path '~/dotfiles'
# # set -g @sessionx-window-height '85%'
# # set -g @sessionx-window-width '75%'
# # set -g @sessionx-zoxide-mode 'on'
# # set -g @sessionx-custom-paths-subdirectories 'false'
# # set -g @sessionx-filter-current 'false'
# set -g @continuum-restore 'on'
# set -g @resurrect-strategy-nvim 'session'
# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "
# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_number_position "right"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_status_modules_right "directory date_time"
# set -g @catppuccin_status_modules_left "session"
# set -g @catppuccin_status_left_separator  " "
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"
# # set -g @catppuccin_meetings_text "#($HOME/.config/tmux/scripts/cal.sh)"
# set -g @catppuccin_date_time_text "%H:%M"

# set -g status-right-length 100
# set -g status-left-length 100

# set -a status-left "#{E:@catppuccin_status_session}"

# Style
# status left look and feel
set -g status-left-length 80
set -g status-left ""

# status right look and feel
set -g status-right-length 160
set -g status-right ""

# status right separator
set -g @custom_status_separator "#[fg=#{@thm_surface_2},bg=default,none]│"

# status right modules
set -ga status-right "#[fg=#{@thm_green}]#{?client_prefix,#[fg=#{@thm_red}]#[reverse]#[bold],} 󰕮 #S #[none]"
set -ga status-right "#{E:#{@custom_status_separator}}"

set -ga status-right "#[fg=#{@thm_maroon}] 󰆍 #{pane_current_command} "
set -ga status-right "#{E:#{@custom_status_separator}}"

set -ga status-right "#[fg=#{@thm_blue}] 󰉋 #{b:pane_current_path} "
set -ga status-right "#{E:#{@custom_status_separator}}"

set -ga status-right "#{?window_zoomed_flag,#[fg=#{@thm_yellow}] 󰁌 zoom ,}"
set -ga status-right "#{?pane_marked,#[fg=#{@thm_yellow}] 󰈻 marked ,}"
set -ga status-right "#{?#{||:#{window_zoomed_flag},#{pane_marked}},#{E:#{@custom_status_separator}},}"

set -ga status-right "#[fg=#{@thm_pink}] 󰌢 #h "
set -ga status-right "#{E:#{@custom_status_separator}}"

set -ga status-right "#[fg=#{@thm_lavender}] 󰃭 %Y-%m-%d 󰅐 %H:%M:%S "


# Configure Tmux
set -g status-position top
set -g status-style "bg=#{@thm_mantle}"
set -g status-justify "left"

# set -gu status
set -g status 2
set -g status-format[1] "\
#[fg=#{@thm_surface_2},bg=#{@thm_bg}]\
#(tmux display-message -p \"#{window_width}\"\
 | xargs seq -s \"─\" 0\
 | tr -d \"[:digit:]\")\
"



setw -g pane-border-status off
setw -g pane-border-format ""
setw -g pane-active-border-style "bg=default,fg=#{@thm_peach}"
setw -g pane-border-style "bg=default,fg=#{@thm_overlay_2}"
setw -g pane-border-lines single

# window look and feel
set -wg automatic-rename on
set -g automatic-rename-format "window"

# window status format
set -gF window-status-separator "#[fg=#{@thm_surface_2}]"
set -g window-status-format " #{?#{==:#{window_name},window},#I,#W} "
set -g window-status-style "fg=#{@thm_rosewater},bg=default"
set -g window-status-last-style "fg=#{@thm_peach}"
set -g window-status-activity-style "fg=#{@thm_red},bold"
set -g window-status-bell-style "fg=#{@thm_red},bold"

# window status current format
set -g window-status-current-format " #{?#{==:#{window_name},window},#I,#W} "
set -g window-status-current-style "fg=#{@thm_peach},bg=default,bold,reverse"



# set -g status-right "#{E:@catppuccin_status_application}"
# set -agF status-right "#{E:@catppuccin_status_cpu}"

# Make the status line pretty and add some modules
# set -g status-right-length 100
# set -g status-left-length 100
# # set -g status-left ""
# set -g status-right '#[fg=#{@thm_crust},bg=#{@thm_teal}] session: #S '
# set -ag status-right "#{E:@catppuccin_status_application}"
# # set -agF status-right "#{E:@catppuccin_status_cpu}"
# set -ag status-right "#{E:@catppuccin_status_session}"
# set -ag status-right "#{E:@catppuccin_status_uptime}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
# run ~/.config/tmux/plugins/catppuccin/tmux/catppuccin.tmux
# run ~/.tmux/plugins/tmux/catppuccin.tmux

# bootstrap tpm
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run ~/.tmux/plugins/tpm/tpm

# source the config: tmux source-file ~/.tmux.conf
